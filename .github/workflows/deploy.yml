name: Smart Deploy to GitHub Pages

on:
  push:
    branches: [ main, blog ]
    paths:
      - 'src/**'
      - 'static/**'
      - 'templates/**'
      - 'data/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need previous commit to detect changes

      - name: Detect changed files
        id: changes
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "build_type=full" >> $GITHUB_OUTPUT
            echo "reason=Manual trigger" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "build_type=full" >> $GITHUB_OUTPUT
            echo "reason=Main branch push" >> $GITHUB_OUTPUT
          else
            # Check if only blog content changed
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
            echo "Changed files: $CHANGED_FILES"

            BLOG_ONLY=true
            for file in $CHANGED_FILES; do
              if [[ ! "$file" =~ ^data/blog/ ]]; then
                BLOG_ONLY=false
                break
              fi
            done

            if [ "$BLOG_ONLY" = "true" ]; then
              echo "build_type=blog" >> $GITHUB_OUTPUT
              echo "reason=Blog content only" >> $GITHUB_OUTPUT
            else
              echo "build_type=full" >> $GITHUB_OUTPUT
              echo "reason=Code or infrastructure changes detected" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Log build decision
        run: |
          echo "üöÄ Build Type: ${{ steps.changes.outputs.build_type }}"
          echo "üìù Reason: ${{ steps.changes.outputs.reason }}"

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Typst
        uses: baptiste0928/cargo-install@v2
        with:
          crate: typst-cli
          version: "^0.10.0"
        if: steps.changes.outputs.build_type == 'full'

      - name: Build site (Full)
        if: steps.changes.outputs.build_type == 'full'
        run: cargo run --bin cv
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build site (Blog only)
        if: steps.changes.outputs.build_type == 'blog'
        run: |
          echo "‚ö° Fast blog-only build"
          echo "üìù Blog content changes detected - optimized build path"

          # Fast blog-only build (skips PDF generation, CV compilation, etc.)
          cargo run --bin cv

          echo "‚úÖ Blog build completed in fast mode"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-sync blog to main
        if: steps.changes.outputs.build_type == 'blog' && github.ref == 'refs/heads/blog'
        run: |
          echo "üîÑ Auto-syncing blog content to main branch"

          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Fetch main branch
          git fetch origin main:main

          # Get the current blog commit
          BLOG_COMMIT=$(git rev-parse HEAD)
          BLOG_MESSAGE=$(git log -1 --pretty=format:"%s")

          # Switch to main and merge blog changes
          git checkout main
          git merge --no-ff blog -m "auto-sync: $BLOG_MESSAGE

          Auto-merged blog content from commit $BLOG_COMMIT

          ü§ñ Generated with [Claude Code](https://claude.ai/code)
          Co-Authored-By: GitHub Actions <actions@github.com>"

          # Push updated main branch
          git push origin main

          echo "‚úÖ Blog content synced to main branch"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4