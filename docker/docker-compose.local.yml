
services:
  blog-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.local
      args:
        - BUILD_VERSION=${BUILD_VERSION:-0.1.0-dev}
    image: blog-api-local:${BUILD_VERSION:-0.1.0-dev}
    ports:
      - "${HOST_PORT:-3002}:3000"
    volumes:
      # Mount data directory from host instead of using a volume
      - ../data:/app/data
      # Mount source code for hot reloading
      - ../src:/app/src
      - ../static:/app/static
      - ../templates:/app/templates
      - ../Cargo.toml:/app/Cargo.toml
      - ../Cargo.lock:/app/Cargo.lock
    restart: unless-stopped
    environment:
      - RUST_LOG=debug  # More verbose logging for development
      - RUST_BACKTRACE=1  # Full backtraces for debugging
      - APP_VERSION=${BUILD_VERSION:-0.1.0-dev}
    networks:
      - blog-network
    # Simplified health check for development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s  # Increased to allow time for Rust compilation
    # Add resource limits to prevent container from using too much CPU/memory
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    # Add logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "app=blog-api"
      - "version=${BUILD_VERSION:-0.1.0-dev}"
      - "environment=development"

networks:
  blog-network:
    driver: bridge
    labels:
      - "app=blog-api"
      - "environment=development"

# No volumes needed since we're mounting directories from the host
