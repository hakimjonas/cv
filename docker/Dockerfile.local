FROM rust:1.88.0-slim-bullseye

WORKDIR /app

# Install dependencies in a single layer
# Add retry logic for better network resilience during builds
RUN for i in $(seq 1 3); do \
        echo "Attempt $i: Running apt-get update..." && \
        (apt-get update && break || sleep 15) \
    done && \
    for i in $(seq 1 3); do \
        echo "Attempt $i: Installing packages..." && \
        (apt-get install -y --no-install-recommends \
            pkg-config \
            libssl-dev \
            curl \
            libdbus-1-dev \
            sqlite3 \
            git \
            && break || sleep 15) \
    done && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# Create a non-root user to run the application
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy dependency files first for better caching
COPY Cargo.toml Cargo.lock ./

# Pre-build dependencies (creates better Docker layer caching)
RUN mkdir -p src/bin && \
    echo "fn main() {}" > src/main.rs && \
    echo "fn main() {}" > src/bin/blog_tester.rs && \
    echo "fn main() {}" > src/bin/security_test.rs && \
    echo "fn main() {}" > src/bin/test_blog_core.rs && \
    echo "fn main() {}" > src/bin/blog_api_server.rs && \
    cargo build && \
    cargo build --release && \
    rm -rf src target/release/deps/cv* target/debug/deps/cv*

# Create data directory with proper permissions
RUN mkdir -p /app/data && \
    chown -R appuser:appuser /app && \
    chmod 700 /app/data

# Set the environment variables
ENV RUST_LOG=debug
ENV RUST_BACKTRACE=1
ENV APP_VERSION=${BUILD_VERSION:-0.1.0-dev}

# Expose the port
EXPOSE 3000

# Switch to non-root user for security
# Note: We'll switch back to root for the CMD to allow cargo to work with mounted volumes
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=120s --retries=5 \
  CMD curl -f http://localhost:3000/health || exit 1

# Switch back to root for the CMD to allow cargo to work with mounted volumes
USER root

# Copy the startup script and SQL script
COPY docker/startup.sh /app/startup.sh
COPY docker/reset_admin_password.sql /app/docker/reset_admin_password.sql
RUN chmod +x /app/startup.sh

# The actual source code will be mounted as volumes in docker-compose.local.yml
CMD ["/app/startup.sh"]