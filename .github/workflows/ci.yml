name: CV Generator CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check code formatting
        run: cargo fmt --all -- --check

      - name: Run Clippy linter
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --verbose

  build:
    name: Build and Deploy CV
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Typst CLI
        uses: baptiste0928/cargo-install@v3 # Updated to v3
        with:
          crate: typst-cli
          version: "^0.13.0"

      - name: Build CV generator
        run: cargo build --release --bin cv

      - name: Fetch CV data from 'content' branch
        run: |
          echo "üì• Fetching content branch..."
          git fetch origin content
          echo "üìã Checking out CV data from content branch..."
          git checkout origin/content -- data/cv_data.json
          echo "‚úÖ Successfully fetched CV data."

      - name: Generate CV files
        run: |
          cargo run --bin cv
          echo "‚úÖ CV generation successful."
          echo "üîç Verifying output files..."
          test -f dist/cv.html && echo "  - cv.html found."
          test -f dist/cv.pdf && echo "  - cv.pdf found."
          test -f dist/index.html && echo "  - index.html found."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload CV artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install cargo-audit
        uses: baptiste0928/cargo-install@v3 # Updated to v3
        with:
          crate: cargo-audit

      - name: Run security audit
        run: cargo audit