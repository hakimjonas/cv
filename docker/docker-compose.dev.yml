version: '3.8'

services:
  blog-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
      args:
        - BUILD_VERSION=${BUILD_VERSION:-0.1.0-dev}
    image: blog-api-dev:${BUILD_VERSION:-0.1.0-dev}
    ports:
      - "${HOST_PORT:-3002}:3000"
    volumes:
      # Mount data directory from host instead of using a volume
      - ../data:/app/data
      # Mount test_data directory for database persistence
      - ../test_data:/app/test_data
      # Mount source code for hot reloading
      - ../src:/app/src
      - ../static:/app/static
      - ../templates:/app/templates
      - ../Cargo.toml:/app/Cargo.toml
      - ../Cargo.lock:/app/Cargo.lock
      # Mount config file
      - ../config.toml:/app/config.toml:ro
    restart: unless-stopped
    environment:
      - RUST_LOG=debug  # More verbose logging for development
      - RUST_BACKTRACE=1  # Full backtraces for debugging
      - APP_VERSION=${BUILD_VERSION:-0.1.0-dev}
      # Git identity configuration
      - GIT_USER_NAME=${GIT_USER_NAME:-Your Name}
      - GIT_USER_EMAIL=${GIT_USER_EMAIL:-your.email@example.com}
      - GITHUB_USERNAME=${GITHUB_USERNAME:-yourusername}
      # Optional GitHub token for API access
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      # Network resilience settings
      - HTTP_TIMEOUT=30
      - HTTP_RETRY=3
      - HTTP_KEEPALIVE=true
      # Development settings
      - DEV_MODE=true
    # Add DNS configuration for better network resilience
    dns:
      - 1.1.1.1
      - 8.8.8.8
      - 9.9.9.9
    # Add extra hosts for better hostname resolution
    extra_hosts:
      - "crates.io:151.101.1.69"
      - "static.crates.io:151.101.1.69"
      - "github.com:140.82.121.4"
      - "api.github.com:140.82.121.6"
    networks:
      - blog-network
    # Simplified health check for development with longer start period
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s  # Increased to allow time for Rust compilation
    # Add resource limits to prevent container from using too much CPU/memory
    deploy:
      resources:
        limits:
          cpus: '2.0'  # More CPU for development builds
          memory: 2G   # More memory for development builds
        reservations:
          cpus: '0.5'
          memory: 512M
    # Add logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "app=blog-api"
      - "version=${BUILD_VERSION:-0.1.0-dev}"
      - "environment=development"

networks:
  blog-network:
    driver: bridge
    # Enable IPv6 for better network resilience
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 172.29.0.0/16
          gateway: 172.29.0.1
        - subnet: 2001:db9::/64
          gateway: 2001:db9::1
    labels:
      - "app=blog-api"
      - "environment=development"

# No volumes needed since we're mounting directories from the host